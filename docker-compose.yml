version: '3.8'

services:
  # Infrastructure
  postgres:
    image: postgres:15-alpine
    container_name: superapp-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_MULTIPLE_DATABASES: identity_db,ledger_db,payment_rail_db,risk_monitor_db,investment_db,lending_db,savings_db,product_catalog_db,partner_management_db,superapp_marketplace,superapp_marketplace_node
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-postgres.sh:/docker-entrypoint-initdb.d/init-postgres.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: superapp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Core Services
  identity-service:
    build: ./core-services/identity-service
    container_name: identity-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  admin-identity-service:
    build: ./core-services/admin-identity-service
    container_name: admin-identity-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  ledger-service:
    build: ./core-services/ledger-service
    container_name: ledger-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  payment-rail-service:
    build: ./core-services/payment-rail-service
    container_name: payment-rail-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  risk-monitor-service:
    build: ./core-services/risk-monitor-service
    container_name: risk-monitor-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8083:8083"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Product Services
  investment-service:
    build: ./product-services/investment-service
    container_name: investment-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8084:8084"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  lending-service:
    build: ./product-services/lending-service
    container_name: lending-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8085:8085"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  savings-service:
    build: ./product-services/savings-service
    container_name: savings-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8086:8086"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Marketplace Services
  product-catalog-service:
    build: ./marketplace-services/product-catalog-service
    container_name: product-catalog-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8090:8090"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  partner-management-service:
    build: ./marketplace-services/partner-management-service
    container_name: partner-management-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8091:8091"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8091/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # BFF Layer
  admin-bff:
    build: ./bff-layer/admin-bff
    container_name: admin-bff
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "9001:9001"
    depends_on:
      - identity-service
      - partner-management-service
      - product-catalog-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9001/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  client-bff:
    build: ./bff-layer/client-bff
    container_name: client-bff
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "9002:9002"
    depends_on:
      - identity-service
      - investment-service
      - lending-service
      - savings-service
      - product-catalog-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9002/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: superapp-network



